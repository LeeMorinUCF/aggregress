head(quine, 10)
class(ind_lpm_lm)
class(agg_lpm_lm)
attributes(ind_lpm_lm)
attributes(agg_lpm_lm)
devtools::load_all()
devtools::load_all()
devtools::test()
# [5,] "fitted.values"
summary(ind_lpm_lm$fitted.values)
summary(agg_lpm_lm$fitted.values)
# Not the same length but similar.
# [6,] "assign"
ind_lpm_lm$assign
agg_lpm_lm$assign
ind_lpm_lm$df.residual
agg_lpm_lm$df.residual
ind_lpm_lm$terms
agg_lpm_lm$terms
coef(ind_lpm_lm)
ind_lpm_coef
ind_lpm_coef <- coef(ind_lpm_lm)
attributes(ind_lpm_coef)
ind_lpm_coef <- coef(ind_lpm_lm)
agg_lpm_coef <- coef(agg_lpm_lm)
ind_lpm_coef
agg_lpm_coef
set.seed(42)
ind_lm_data <- gen_agg_lm(model = 'lm')
# Variables appear correct.
# All inside the unit interval.
summary(ind_lm_data)
devtools::load_all()
devtools::test()
set.seed(42)
ind_lm_data <- gen_agg_lm(model = 'lm')
# Variables appear correct.
# All inside the unit interval.
summary(ind_lm_data)
ind_lm_data[, 'y_squared'] <- ind_lm_data[, 'y']^2
summary(ind_lm_data)
agg_lm_data <- aggregate(cbind(num, y, y_squared) ~ x1 + x2 + x3,
data = ind_lm_data,
FUN = sum)
set.seed(42)
ind_lm_data <- gen_agg_lm(model = 'lm')
# Variables appear correct.
# All inside the unit interval.
summary(ind_lm_data)
# Aggregate the counts.
ind_lm_data[, 'num'] <- 1
# Add the squared responses for calculation of statistics.
ind_lm_data[, 'y_squared'] <- ind_lm_data[, 'y']^2
# For response 'name_of_response', this variable needs
# to be called 'name_of_response_squared'
summary(ind_lm_data)
agg_lm_data <- aggregate(cbind(num, y, y_squared) ~ x1 + x2 + x3,
data = ind_lm_data,
FUN = sum)
summary(agg_lm_data)
agg_lm_data
ind_lm_reg <- lm(y ~ x1 + x2 + x3, data = ind_lm_data)
agg_lm_reg <- agg_lm(y ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
agg_lm_data[, 'y_bar'] <- agg_lm_data[, 'y']/agg_lm_data[, 'num']
summary(agg_lm_data)
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
ind_lm_coef <- coef(ind_lm_reg)
agg_lm_coef <- coef(agg_lm_reg)
ind_lm_coef
agg_lm_coef
# [4,] "rank"
ind_lm_lm$rank
agg_lm_lm$rank
# Same.
# [1,] "coefficients"
ind_lm_reg$coefficients
agg_lm_reg$coefficients
summary(ind_lm_reg$residuals)
summary(agg_lm_reg$residuals)
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
ind_lm_reg$rank
agg_lm_reg$rank
ind_lm_reg$df.residual
agg_lm_reg$df.residual
ind_lm_reg_summ <- summary(ind_lm_reg)
agg_lm_reg_summ <- summary_agg_lm(agg_lm_reg)
ind_lm_reg_summ
attributes(agg_lm_reg)
attributes(ind_lm_reg_summ)
attributes(agg_lm_reg_summ)
t(t(attributes(ind_lm_reg_summ)))
t(t(attributes(ind_lm_reg_summ$names)))
t(t(attributes(ind_lm_reg_summ)))
t(attributes(ind_lm_reg_summ))
t(attributes(ind_lm_reg_summ))$names
attributes(ind_lm_reg_summ)
attributes(ind_lm_reg_summ)$names
t(attributes(ind_lm_reg_summ)$names)
t(t(attributes(ind_lm_reg_summ)$names))
ind_lm_reg_summ$call
agg_lm_reg_summ$call
ind_lm_reg_summ$terms
agg_lm_reg_summ$terms
summary(ind_lm_reg_summ$residuals)
summary(agg_lm_reg_summ$residuals)
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
summary(agg_lm_reg_summ$residuals)
summary(ind_lm_reg_summ$residuals)
summary(agg_lm_reg$residuals - agg_lm_reg_summ$residuals)
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
ind_lm_reg_summ$coefficients
agg_lm_reg_summ$coefficients
ind_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error'] /
ind_lm_reg_summ$coefficients[, 'Std. Error']
ind_lm_reg_summ$aliased
agg_lm_reg_summ$aliased
ind_lm_reg_summ$sigma
agg_lm_reg_summ$sigma
agg_lm_reg_summ$sigma / ind_lm_reg_summ$sigma
ind_lm_reg_summ$df
agg_lm_reg_summ$df
ind_lm_reg_summ$r.squared
agg_lm_reg_summ$r.squared
ind_lm_reg_summ$adj.r.squared
agg_lm_reg_summ$adj.r.squared
ind_lm_reg_summ$fstatistic
agg_lm_reg_summ$fstatistic
ind_lm_reg_summ$cov.unscaled
agg_lm_reg_summ$cov.unscaled
agg_lm_reg_summ$cov.unscaled / ind_lm_reg_summ$cov.unscaled
all(agg_lpm_data[, 'y'] %in% c(0, 1))
all(agg_lpm_data[, 'y'] %in% c(0, 1))
all(agg_lm_data[, 'y'] %in% c(0, 1))
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
summary(agg_lm_reg_summ$residuals*sqrt(agg_lm_reg$weights))
devtools::load_all()
devtools::test()
# Modified lm function.
# agg_lm_reg <- agg_lm(y ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
agg_lm_reg$is_LPM
# Compare summaries.
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
devtools::load_all()
devtools::test()
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
devtools::load_all()
devtools::test()
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
devtools::load_all()
devtools::test()
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num)
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
# Compare estimates first.
ind_lm_coef <- coef(ind_lm_reg)
agg_lm_coef <- coef(agg_lm_reg)
ind_lm_coef
agg_lm_coef
ind_lm_reg$coefficients
agg_lm_reg$coefficients
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
ind_lm_reg$rank
agg_lm_reg$rank
ind_lm_reg$df.residual
agg_lm_reg$df.residual
ind_lm_reg_summ <- summary(ind_lm_reg)
agg_lm_reg_summ <- summary_agg_lm(agg_lm_reg)
summary(agg_lm_reg_summ$residuals*sqrt(agg_lm_reg$weights))
summary(ind_lm_reg_summ$residuals)
summary(agg_lm_reg_summ$residuals)
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
ind_lm_reg_summ$coefficients
agg_lm_reg_summ$coefficients
ind_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error'] /
ind_lm_reg_summ$coefficients[, 'Std. Error']
ind_lm_reg_summ$sigma
agg_lm_reg_summ$sigma
agg_lm_reg_summ$sigma / ind_lm_reg_summ$sigma
ind_lm_reg_summ$df
agg_lm_reg_summ$df
ind_lm_reg_summ$sigma
ind_lm_reg_summ$df
ind_lm_reg$df.residual
sum(ind_lm_reg_summ$residuals^2)/ind_lm_reg$df.residual
ind_lm_reg_summ$sigma
ind_lm_reg_summ$sigma/sum(ind_lm_reg_summ$residuals^2)
sum(ind_lm_reg_summ$residuals^2)/ind_lm_reg_summ$sigma
ind_lm_reg_summ$sigma
sqrt(sum(ind_lm_reg_summ$residuals^2)/ind_lm_reg$df.residual)
sqrt(sum((agg_lm_reg_summ$residuals*agg_lm_reg$weights)^2)/agg_lm_reg$df.residual)
ind_lm_reg$df.residual
agg_lm_reg$df.residual
sum(ind_lm_reg_summ$residuals^2)
sqrt(sum(agg_lm_reg$weights * agg_lm_reg_summ$residuals^2)/agg_lm_reg$df.residual)
sqrt(sum(agg_lm_reg$weights^2 * agg_lm_reg_summ$residuals^2)/agg_lm_reg$df.residual)
agg_lm_reg_summ$sigma
sqrt(sum(ind_lm_reg_summ$residuals^2)/ind_lm_reg$df.residual)
rss_check_ind <- sum(ind_lm_reg_summ$residuals^2)
rss_check_ind
rss_check_ind
w_A
rss_check_ind <- sum(ind_lm_reg_summ$residuals^2)
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']*w_A
f_A <- agg_lm_reg_summ$residuals
rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_ind
rss_check_agg
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']
f_A <- agg_lm_reg_summ$residuals
rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']
f_A <- agg_lm_reg$fitted.values
rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg
colnames(agg_lm_data)
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']
y2_A <- agg_lm_data[, 'y_squared']
f_A <- agg_lm_reg$fitted.values
# rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg <- sum(y2_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg
rss_check_ind
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num,
y_squared = agg_lm_data[, 'y_squared'])
summary(ind_lm_reg)
summary_agg_lm(agg_lm_reg)
ind_lm_coef <- coef(ind_lm_reg)
agg_lm_coef <- coef(agg_lm_reg)
ind_lm_coef
agg_lm_coef
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
ind_lm_reg$df.residual
agg_lm_reg$df.residual
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
agg_lm_reg_summ$coefficients[, 'Std. Error'] /
ind_lm_reg_summ$coefficients[, 'Std. Error']
ind_lm_reg_summ$sigma
sqrt(sum(ind_lm_reg_summ$residuals^2)/ind_lm_reg$df.residual)
sqrt(sum(agg_lm_reg$weights * agg_lm_reg_summ$residuals^2)/agg_lm_reg$df.residual)
rss_check_ind <- sum(ind_lm_reg_summ$residuals^2)
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']
y2_A <- agg_lm_data[, 'y_squared']
f_A <- agg_lm_reg$fitted.values
# rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg <- sum(y2_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg
rss_check_ind
devtools::load_all()
devtools::test()
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num,
y_squared = agg_lm_data[, 'y_squared'])
ind_lm_coef <- coef(ind_lm_reg)
agg_lm_coef <- coef(agg_lm_reg)
ind_lm_coef
agg_lm_coef
summary(agg_lm_reg$residuals*agg_lm_reg$weights)
ind_lm_reg_summ$sigma
agg_lm_reg_summ$sigma
# Compare summaries.
ind_lm_reg_summ <- summary(ind_lm_reg)
agg_lm_reg_summ <- summary_agg_lm(agg_lm_reg)
ind_lm_reg_summ$sigma
agg_lm_reg_summ$sigma
summary(agg_lm_reg_summ$residuals*agg_lm_reg$weights)
ind_lm_reg_summ$coefficients
agg_lm_reg_summ$coefficients
ind_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error']
agg_lm_reg_summ$coefficients[, 'Std. Error'] /
ind_lm_reg_summ$coefficients[, 'Std. Error']
ind_lm_reg_summ$sigma
agg_lm_reg_summ$sigma
agg_lm_reg_summ$sigma / ind_lm_reg_summ$sigma
rss_check_ind <- sum(ind_lm_reg_summ$residuals^2)
w_A <- agg_lm_reg$weights
y_A <- agg_lm_data[, 'y_bar']
y2_A <- agg_lm_data[, 'y_squared']
f_A <- agg_lm_reg$fitted.values
# rss_check_agg <- sum(w_A * y_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_agg <- sum(y2_A) - 2*sum(w_A * y_A * f_A) + sum(w_A * f_A^2)
rss_check_ind
rss_check_agg
ind_lm_reg_summ$df
agg_lm_reg_summ$df
ind_lm_reg_summ$r.squared
agg_lm_reg_summ$r.squared
ind_lm_reg_summ$adj.r.squared
agg_lm_reg_summ$adj.r.squared
ind_lm_reg_summ$fstatistic
agg_lm_reg_summ$fstatistic
ind_lm_reg_summ$cov.unscaled
agg_lm_reg_summ$cov.unscaled
agg_lm_reg_summ$cov.unscaled / ind_lm_reg_summ$cov.unscaled
devtools::load_all()
devtools::test()
# Generate data.
set.seed(42)
ind_lm_data <- gen_agg_lm(model = 'lm')
# Aggregate the counts.
ind_lm_data[, 'num'] <- 1
# Add the squared responses for calculation of statistics.
ind_lm_data[, 'y_squared'] <- ind_lm_data[, 'y']^2
agg_lm_data <- aggregate(cbind(num, y, y_squared) ~ x1 + x2 + x3,
data = ind_lm_data,
FUN = sum)
agg_lm_data[, 'y_bar'] <- agg_lm_data[, 'y']/agg_lm_data[, 'num']
# Estimate models.
ind_lm_reg <- lm(y ~ x1 + x2 + x3, data = ind_lm_data)
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num,
y_squared = agg_lm_data[, 'y_squared'])
expect_equal(ind_lm_reg$coefficients, agg_lm_reg$coefficients)
ind_lm_reg$coefficients
agg_lm_reg$coefficients
ind_lm_reg$rank
agg_lm_reg$rank
ind_lm_reg$df.residual
agg_lm_reg$df.residual
# Generate data.
set.seed(42)
ind_lm_data <- gen_agg_lm(model = 'lm')
# Aggregate the counts.
ind_lm_data[, 'num'] <- 1
# Add the squared responses for calculation of statistics.
ind_lm_data[, 'y_squared'] <- ind_lm_data[, 'y']^2
agg_lm_data <- aggregate(cbind(num, y, y_squared) ~ x1 + x2 + x3,
data = ind_lm_data,
FUN = sum)
agg_lm_data[, 'y_bar'] <- agg_lm_data[, 'y']/agg_lm_data[, 'num']
# Estimate models.
ind_lm_reg <- lm(y ~ x1 + x2 + x3, data = ind_lm_data)
agg_lm_reg <- agg_lm(y_bar ~ x1 + x2 + x3, data = agg_lm_data, weights = num,
y_squared = agg_lm_data[, 'y_squared'])
ind_lm_reg_summ <- capture.output(summary(ind_lm_reg))
agg_lm_reg_summ <- capture.output(summary_agg_lm(agg_lm_reg))
ind_lm_reg_summ
agg_lm_reg_summ
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
devtools::load_all()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
# Aggregate the counts.
ind_lpm_data[, 'num'] <- 1
agg_lpm_data <- aggregate(num ~ y + x1 + x2 + x3,
data = ind_lpm_data,
FUN = sum)
summary(agg_lpm_data)
# Aggregate the counts.
ind_log_data[, 'num'] <- 1
agg_log_data <- aggregate(num ~ y + x1 + x2 + x3,
data = ind_log_data,
FUN = sum)
summary(agg_log_data)
ind_log_glm <- glm(y ~ x1 + x2 + x3, data = ind_lpm_data,
family = 'binomial')
ind_log_glm <- glm(y ~ x1 + x2 + x3, data = ind_log_data,
family = 'binomial')
agg_log_lm <- glm(y ~ x1 + x2 + x3, data = agg_log_data, weights = num,
family = 'binomial')
# Compare summaries.
summary(ind_log_lm)
# summary_agg_lm(agg_log_lm)
summary(agg_log_lm)
ind_log_glm <- glm(y ~ x1 + x2 + x3, data = ind_log_data,
family = 'binomial')
# Modified lm function.
# agg_log_glm <- agg_glm(y ~ x1 + x2 + x3, data = agg_log_data, weights = num)
agg_log_glm <- glm(y ~ x1 + x2 + x3, data = agg_log_data, weights = num,
family = 'binomial')
# Compare summaries.
summary(ind_log_glm)
# summary_agg_lm(agg_log_glm)
summary(agg_log_glm)
c(2, 2, 2, 4, 4, 4, 6, 6, 6)
devtools::load_all()
devtools::test()
set.seed(42)
ind_log_data <- gen_agg_lm(model = 'log')
# Variables appear correct.
# All inside the unit interval.
summary(ind_log_data)
# Aggregate the counts.
ind_log_data[, 'num'] <- 1
agg_log_data <- aggregate(num ~ y + x1 + x2 + x3,
data = ind_log_data,
FUN = sum)
summary(agg_log_data)
ind_log_glm <- glm(y ~ x1 + x2 + x3, data = ind_log_data,
family = 'binomial')
#--------------------------------------------------
# Estimate Linear Model from Aggregated Data
#--------------------------------------------------
# Modified lm function.
# agg_log_glm <- agg_glm(y ~ x1 + x2 + x3, data = agg_log_data, weights = num)
agg_log_glm <- glm(y ~ x1 + x2 + x3, data = agg_log_data, weights = num,
family = 'binomial')
#--------------------------------------------------
# Compare the results
#--------------------------------------------------
# Compare summaries.
summary(ind_log_glm)
# summary_agg_lm(agg_log_glm)
summary(agg_log_glm)
attributes(ind_log_glm)
t(attributes(ind_log_glm)$names)
t(t(attributes(ind_log_glm)$names))
ind_log_glm$coefficients
agg_log_glm$coefficients
summary(ind_log_glm$coefficients - agg_log_glm$coefficients)
ind_log_glm$coefficients - agg_log_glm$coefficients
summary(ind_log_glm$coefficients)
summary(ind_log_glm$residuals)
summary(agg_log_glm$residuals)
ind_log_glm$effects
ind_log_glm$R
agg_log_glm$R
ind_log_glm$rank
agg_log_glm$rank
ind_log_glm$qr
agg_log_glm$qr
ind_log_glm$boundary
agg_log_glm$boundary
ind_log_glm$converged
agg_log_glm$converged
ind_log_glm$df.null
agg_log_glm$df.null
ind_log_glm$df.residual
agg_log_glm$df.residual
ind_log_glm$iter
agg_log_glm$iter
ind_log_glm$null.deviance
agg_log_glm$null.deviance
ind_log_glm$aic
agg_log_glm$aic
ind_log_glm$deviance
agg_log_glm$deviance
ind_log_glm$R
agg_log_glm$R
agg_log_glm$R / ind_log_glm$R
devtools::load_all()
devtools::test()
